{"version":3,"sources":["components/Jumbotron/index.js","components/Card/index.js","components/Form/index.js","components/List/index.js","components/Grid/index.js","components/Book/index.js","utils/API.js","pages/Landing.js","pages/Saved.js","pages/NoMatch.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","className","Card","icon","title","concat","aria-hidden","Form","query","handleInputChange","handleFormSubmit","id","type","value","name","onChange","required","onClick","List","ListItem","_ref2","Container","fluid","Row","Col","_ref3","size","split","map","join","Book","authors","description","image","link","Button","src","alt","href","API","getBooks","axios","get","params","getSavedBooks","deleteBook","delete","saveBook","data","post","Landing","state","books","event","_event$target","target","_this","setState","Object","defineProperty","then","res","preventDefault","handleBookSave","book","find","volumeInfo","imageLinks","thumbnail","infoLink","_this2","this","components_Jumbotron","components_Card","components_Form","length","List_List","components_Book","Component","Saved","catch","err","console","log","handleBookDelete","Link","NoMatch","role","aria-label","Nav","open","width","window","innerWidth","updateWidth","newState","toggleNav","addEventListener","removeEventListener","react_router_dom","to","data-toggle","data-target","aria-controls","aria-expanded","location","pathname","App","components_Nav","react_router","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.315ba776.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Jumbotron({children}) {\r\n    return <div className=\"jumbotron\">{children}</div>;\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\n\r\nfunction Card({ icon, title, children }) {\r\n  return (\r\n    <div className=\"card mt-4\">\r\n      <div className=\"card-header\">\r\n        <h3>\r\n            <i className={`fa fa-${icon}`} aria-hidden=\"true\" /> {title}\r\n        </h3>\r\n      </div>\r\n      <div className=\"card-body\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nfunction Form({query, handleInputChange, handleFormSubmit}) {\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label>\r\n                    Book\r\n                </label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    id=\"title\"\r\n                    type=\"text\"\r\n                    value={query}\r\n                    name=\"query\"\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"search\">\r\n                <button\r\n                onClick={handleFormSubmit}\r\n                type=\"submit\"\r\n                className=\"btn\">\r\n                    Search\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nexport const List = ({children}) => (\r\n    <ul className=\"list-group\">\r\n        {children}\r\n    </ul>\r\n);\r\n\r\nexport function ListItem({children}) {\r\n    return <li className=\"list-group-item\">{children}</li>;\r\n}","import React from \"react\";\r\n\r\nexport function Container({ fluid, children }) {\r\n    return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Row({ fluid, children }) {\r\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Col({ size, children }) {\r\n    return (\r\n      <div\r\n        className={size\r\n          .split(\" \")\r\n          .map(size => \"col-\" + size)\r\n          .join(\" \")}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { ListItem } from \"../List\";\r\nimport { Row, Col } from \"../Grid\";\r\n\r\nfunction Book({title, authors, description, image, link, Button}) {\r\n    return (\r\n        <ListItem>\r\n            <Row className=\"wrapper\">\r\n                <Col size=\"md-8\">\r\n                    <h3>{title}</h3>\r\n                </Col>\r\n                <Col size=\"md-6\">\r\n                    <p>Written by {authors}</p>\r\n                </Col>\r\n                <Col size=\"md-6\">\r\n                    <img className=\"thumbnail\" src={image} alt={title} />\r\n                </Col>\r\n                <Col size=\"md-6\">\r\n                    <p>Description: {description}</p>\r\n                </Col>\r\n                <Col size=\"md-6\">\r\n                    <div className=\"viewBtn\">\r\n                        <a className=\"btn\" href={link}>\r\n                            Learn More\r\n                        </a>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default Book;","import axios from \"axios\";\r\n\r\nexport default {\r\n    getBooks: function(query) {\r\n        return axios.get(\"/api/google\", {params: { query: \"title:\" + query}});\r\n    },\r\n    getSavedBooks: function() {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n    deleteBook: function(id) {\r\n        return axios.delete(\"/api/books/\" + id);\r\n    },\r\n    saveBook: function(data) {\r\n        return axios.post(\"/api/books\", data)\r\n    }\r\n};","import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport Card from \"../components/Card\";\r\nimport Form from \"../components/Form\";\r\nimport Book from \"../components/Book\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List } from \"../components/List\";\r\n\r\nclass Landing extends Component {\r\n    state = {\r\n        books: [],\r\n        query: \"\"\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    getBooks = () => {\r\n        API.getBooks(this.state.query)\r\n            .then(res =>\r\n                this.setState({\r\n                    books:res.data\r\n                })\r\n            );\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.getBooks();\r\n    }\r\n\r\n    handleBookSave = title => {\r\n        const book = this.state.books.find(book => book.title === title);\r\n\r\n        API.saveBook({\r\n            title: book.volumeInfo.title,\r\n            authors: book.volumeInfo.authors,\r\n            description: book.volumeInfo.description,\r\n            image: book.volumeInfo.imageLinks.thumbnail,\r\n            link: book.volumeInfo.infoLink\r\n        }).then(() => this.getBooks());\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Jumbotron>\r\n                            <h1 className=\"text-center\">\r\n                                Book Search Powered by React and Google\r\n                            </h1>\r\n                            <h2 className=\"text-center\">Search for and Save your favorite books!</h2>\r\n                        </Jumbotron>\r\n                    </Col>\r\n                    <Col size=\"md-12\">\r\n                        <Card title=\"Search Form\">\r\n                            <Form handleInputChange={this.handleInputChange} handleFormSubmit={this.handleFormSubmit} query={this.state.query} />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Card title=\"Search Results\">\r\n                            {this.state.books.length ? (\r\n                                <List>\r\n                                    {this.state.books.map(book => (\r\n                                        <Book\r\n                                        title={book.title}\r\n                                        authors= {book.authors.join(\", \")}\r\n                                        description={book.description}\r\n                                        image={book.image}\r\n                                        link={book.link}\r\n                                        Button={() => (\r\n                                            <button onClick={()=>\r\n                                            this.handleBookSave(book.title)} className=\"btn\">\r\n                                                Save\r\n                                            </button>\r\n                                        )} />\r\n                                    ))}\r\n                                </List>\r\n                            ):(<h2 className=\"text-center\">No Searched Books</h2>)}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport Card from \"../components/Card\";\r\nimport Book from \"../components/Book\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List } from \"../components/List\";\r\n\r\nclass Saved extends Component {\r\n    state = {\r\n        books: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getSavedBooks();\r\n    }\r\n\r\n    getSavedBooks = () => {\r\n        API.getSavedBooks()\r\n            .then(res =>\r\n                this.setState({books: res.data})\r\n            )\r\n            .catch(err=>console.log(err));\r\n    };\r\n\r\n    handleBookDelete = title => {\r\n        API.deleteBook(title).then(res => this.getSavedBooks());\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Jumbotron>\r\n                            <h1 className=\"text-center\">\r\n                                Book Search Powered by React and Google\r\n                            </h1>\r\n                            <h2 className=\"text-center\">Search for and Save your favorite books!</h2>\r\n                        </Jumbotron>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Card title=\"saved books\">\r\n                            {this.state.books.length ? (\r\n                                <List>\r\n                                    {this.state.books.map(book => (\r\n                                        <Book\r\n                                        title={book.title}\r\n                                        authors= {book.authors.join(\", \")}\r\n                                        description={book.description}\r\n                                        image={book.image}\r\n                                        link={book.Link}\r\n                                        Button={()=> (\r\n                                            <button onClick={()=>\r\n                                            this.handleBookDelete(book.title)}\r\n                                            className=\"btn\">Delete</button>\r\n                                        )}\r\n                                        />\r\n                                    ))}\r\n                                </List>\r\n                            ):(<h2 className=\"text-center\">No Saved Books</h2>)}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default Saved;","import React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1 className=\"text-center\">404 Page Not Found</h1>\r\n            <h1 className=\"text-center\">\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                🙄\r\n              </span>\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Nav extends Component {\r\n    state= {\r\n        open: false,\r\n        width: window.innerWidth\r\n    };\r\n\r\n    updateWidth = () => {\r\n        const newState = { width: window.innerWidth };\r\n    \r\n        if (this.state.open && newState.width > 991) {\r\n          newState.open = false;\r\n        }\r\n    \r\n        this.setState(newState);\r\n    };\r\n\r\n    toggleNav = () => {\r\n        this.setState({ open: !this.state.open });\r\n    };\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.updateWidth);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWidth);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Book Search</Link>\r\n                <button\r\n                    onClick={this.toggleNav}\r\n                    className=\"navbar-toggler\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarNav\"\r\n                    aria-controls=\"navbarNav\"\r\n                    aria-expanded=\"false\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className={`${this.state.open ? \"\" :\"collapse \"}navbar-collapse`} id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                            onClick={this.toggleNav}\r\n                            className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\r\n                            to=\"/\">\r\n                            Search\r\n                          </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                            onClick={this.toggleNav}\r\n                            className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\r\n                            to=\"/saved\">\r\n                            Saved\r\n                          </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Landing from \"./pages/Landing\";\nimport Saved from \"./pages/Saved\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component= {Landing} />\n          <Route exact path=\"/saved\" component= {Saved} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}